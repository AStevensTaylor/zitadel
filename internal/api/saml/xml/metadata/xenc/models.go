// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for http://www.w3.org/2001/04/xmlenc#
package xenc

import (
	"encoding/xml"
	"github.com/caos/zitadel/internal/api/saml/xml/metadata/xml_dsig"
)

// Element
type CipherData struct {
	XMLName xml.Name `xml:"CipherData"`

	CipherValue string `xml:"CipherValue"`

	CipherReference *CipherReferenceType `xml:"CipherReference"`
}

// Element
type CipherReference struct {
	XMLName xml.Name `xml:"CipherReference"`

	URI string `xml:"URI,attr"`

	Transforms *TransformsType `xml:"Transforms"`
}

// Element
type EncryptedData struct {
	XMLName xml.Name `xml:"EncryptedData"`

	Id string `xml:"Id,attr,omitempty"`

	Type string `xml:"Type,attr,omitempty"`

	MimeType string `xml:"MimeType,attr,omitempty"`

	Encoding string `xml:"Encoding,attr,omitempty"`

	EncryptionMethod *EncryptionMethodType `xml:"EncryptionMethod"`

	KeyInfo *xml_dsig.KeyInfoType `xml:"KeyInfo"`

	CipherData CipherDataType `xml:"CipherData"`

	EncryptionProperties *EncryptionPropertiesType `xml:"EncryptionProperties"`
}

// Element
type EncryptedKey struct {
	XMLName xml.Name `xml:"EncryptedKey"`

	Recipient string `xml:"Recipient,attr,omitempty"`

	Id string `xml:"Id,attr,omitempty"`

	Type string `xml:"Type,attr,omitempty"`

	MimeType string `xml:"MimeType,attr,omitempty"`

	Encoding string `xml:"Encoding,attr,omitempty"`

	ReferenceList *ReferenceList `xml:"ReferenceList"`

	CarriedKeyName string `xml:"CarriedKeyName"`

	EncryptionMethod *EncryptionMethodType `xml:"EncryptionMethod"`

	KeyInfo *xml_dsig.KeyInfoType `xml:"KeyInfo"`

	CipherData CipherDataType `xml:"CipherData"`

	EncryptionProperties *EncryptionPropertiesType `xml:"EncryptionProperties"`
}

// Element
type AgreementMethod struct {
	XMLName xml.Name `xml:"AgreementMethod"`

	Algorithm string `xml:"Algorithm,attr"`

	KANonce string `xml:"KA-Nonce"`

	OriginatorKeyInfo *xml_dsig.KeyInfoType `xml:"OriginatorKeyInfo"`

	RecipientKeyInfo *xml_dsig.KeyInfoType `xml:"RecipientKeyInfo"`
}

// Element
type ReferenceList struct {
	XMLName xml.Name `xml:"ReferenceList"`

	DataReference []ReferenceType `xml:"DataReference"`

	KeyReference []ReferenceType `xml:"KeyReference"`
}

// Element
type EncryptionProperties struct {
	XMLName xml.Name `xml:"EncryptionProperties"`

	Id string `xml:"Id,attr,omitempty"`

	EncryptionProperty []EncryptionPropertyType `xml:",any"`
}

// Element
type EncryptionProperty struct {
	XMLName xml.Name `xml:"EncryptionProperty"`

	Target string `xml:"Target,attr,omitempty"`

	Id string `xml:"Id,attr,omitempty"`
}

// XSD ComplexType declarations

type EncryptedType struct {
	XMLName xml.Name

	Id string `xml:"Id,attr,omitempty"`

	Type string `xml:"Type,attr,omitempty"`

	MimeType string `xml:"MimeType,attr,omitempty"`

	Encoding string `xml:"Encoding,attr,omitempty"`

	EncryptionMethod *EncryptionMethodType `xml:"EncryptionMethod"`

	KeyInfo *xml_dsig.KeyInfoType `xml:"KeyInfo"`

	CipherData CipherDataType `xml:"CipherData"`

	EncryptionProperties *EncryptionPropertiesType `xml:"EncryptionProperties"`

	InnerXml string `xml:",innerxml"`
}

type EncryptionMethodType struct {
	XMLName xml.Name

	Algorithm string `xml:"Algorithm,attr"`

	KeySize *KeySizeType `xml:"KeySize"`

	OAEPparams string `xml:"OAEPparams"`

	InnerXml string `xml:",innerxml"`
}

type CipherDataType struct {
	XMLName xml.Name

	CipherValue string `xml:"CipherValue"`

	CipherReference *CipherReferenceType `xml:"CipherReference"`

	InnerXml string `xml:",innerxml"`
}

type CipherReferenceType struct {
	XMLName xml.Name

	URI string `xml:"URI,attr"`

	Transforms *TransformsType `xml:"Transforms"`

	InnerXml string `xml:",innerxml"`
}

type TransformsType struct {
	XMLName xml.Name

	Transform []xml_dsig.TransformType `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type EncryptedDataType struct {
	XMLName xml.Name

	Id string `xml:"Id,attr,omitempty"`

	Type string `xml:"Type,attr,omitempty"`

	MimeType string `xml:"MimeType,attr,omitempty"`

	Encoding string `xml:"Encoding,attr,omitempty"`

	EncryptionMethod *EncryptionMethodType `xml:"EncryptionMethod"`

	KeyInfo *xml_dsig.KeyInfoType `xml:"KeyInfo"`

	CipherData CipherDataType `xml:"CipherData"`

	EncryptionProperties *EncryptionPropertiesType `xml:"EncryptionProperties"`

	InnerXml string `xml:",innerxml"`
}

type EncryptedKeyType struct {
	XMLName xml.Name

	Recipient string `xml:"Recipient,attr,omitempty"`

	Id string `xml:"Id,attr,omitempty"`

	Type string `xml:"Type,attr,omitempty"`

	MimeType string `xml:"MimeType,attr,omitempty"`

	Encoding string `xml:"Encoding,attr,omitempty"`

	ReferenceList *ReferenceList `xml:"ReferenceList"`

	CarriedKeyName string `xml:"CarriedKeyName"`

	EncryptionMethod *EncryptionMethodType `xml:"EncryptionMethod"`

	KeyInfo *xml_dsig.KeyInfoType `xml:"KeyInfo"`

	CipherData CipherDataType `xml:"CipherData"`

	EncryptionProperties *EncryptionPropertiesType `xml:"EncryptionProperties"`

	InnerXml string `xml:",innerxml"`
}

type AgreementMethodType struct {
	XMLName xml.Name

	Algorithm string `xml:"Algorithm,attr"`

	KANonce string `xml:"KA-Nonce"`

	OriginatorKeyInfo *xml_dsig.KeyInfoType `xml:"OriginatorKeyInfo"`

	RecipientKeyInfo *xml_dsig.KeyInfoType `xml:"RecipientKeyInfo"`

	InnerXml string `xml:",innerxml"`
}

type ReferenceType struct {
	XMLName xml.Name

	URI string `xml:"URI,attr"`

	InnerXml string `xml:",innerxml"`
}

type EncryptionPropertiesType struct {
	XMLName xml.Name

	Id string `xml:"Id,attr,omitempty"`

	EncryptionProperty []EncryptionPropertyType `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

type EncryptionPropertyType struct {
	XMLName xml.Name

	Target string `xml:"Target,attr,omitempty"`

	Id string `xml:"Id,attr,omitempty"`

	InnerXml string `xml:",innerxml"`
}

// XSD SimpleType declarations

type KeySizeType int64
